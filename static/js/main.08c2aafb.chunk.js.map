{"version":3,"sources":["components/redux/actionCreators.js","components/redux/actions.js","components/Header.jsx","components/SearchBar.jsx","components/Movie.jsx","components/Home.jsx","components/Favorite.jsx","components/Favorites.jsx","components/Routes.jsx","components/redux/store.js","components/App.jsx","index.js"],"names":["getMovie","title","dispatch","decoder","TextDecoder","fetch","method","headers","then","response","body","getReader","read","value","done","type","movie","JSON","parse","decode","catch","alert","console","log","removeFromFavorites","id","connect","state","favCount","favoriteReducer","favorites","length","useState","show","navBtn","navMenu","navItem","menu","setMenu","hideMenu","className","to","onClick","showMovie","setMovie","placeholder","onChange","e","preventDefault","target","handleClick","onKeyDown","keyCode","pressEnter","Movie","timeout","poster","year","rating","plot","cast","fav","addMovieToFavorites","removeMovieFromFavorites","loader","hasExpired","time","setTime","setTimeout","clearTimeout","src","alt","find","f","defaultProps","map","p","actor","character","movieReducer","favorite","Favorite","image","substr","concat","showFavMovie","Routes","basename","path","exact","component","Home","Favorites","initialMovie","initialFavorites","createStore","combineReducers","action","filter","composeWithDevTools","applyMiddleware","thunk","movies","store","Math","floor","random","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.08c2aafb.chunk.js","sourcesContent":["import { SHOW_MOVIE, ADD_FAVORITE, REMOVE_FAVORITE, SET_LOADER } from './actions';\n\nconst getMovie = (title) => dispatch => {\n\n    const decoder = new TextDecoder(\"utf-8\");\n\n    fetch(\n        `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/film/${title}`,\n        {\n            method: \"GET\",\n            headers: {\n                \"x-rapidapi-host\":\n                    \"imdb-internet-movie-database-unofficial.p.rapidapi.com\",\n                \"x-rapidapi-key\": \"54c8ed5f3amsh4ebdfcbc69d85a8p126f77jsn73b94ea62069\"\n            }\n        }\n    )\n        .then(response => {\n            response.body\n                .getReader()\n                .read()\n                .then(({ value, done }) => {\n                    return dispatch({\n                        type: SHOW_MOVIE,\n                        movie: JSON.parse(decoder.decode(value))\n                    })\n                })\n                .catch(() => {\n                    alert(\"This movie does not exist\");\n                });\n        })\n\n        .catch(() => {\n            console.log(\"This movie does not exist\");\n        });\n}\n\nconst showFavMovie = (movie) => ({\n    type: SHOW_MOVIE,\n    movie\n})\n\nconst addToFavorites = (favorite) => ({\n    type: ADD_FAVORITE,\n    favorite: favorite\n})\n\nconst removeFromFavorites = (id) => ({\n    type: REMOVE_FAVORITE,\n    id\n})\n\nconst setLoader = () => ({\n    type: SET_LOADER\n})\n\nexport { getMovie, addToFavorites, removeFromFavorites, showFavMovie, setLoader };","export const SHOW_MOVIE = \"SHOW_MOVIE\";\nexport const ADD_FAVORITE = \"ADD_FAVORITE\";\nexport const REMOVE_FAVORITE = \"REMOVE_FAVORITE\";\nexport const SET_LOADER = \"SET_LOADER\";\n\n","import React, { useState } from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Header = ({ favCount }) => {\n\n    const [menu, setMenu] = useState({\n        show: false,\n        navBtn: '',\n        navMenu: '',\n        navItem: ''\n    });\n\n\n    /*\n        If burger menu (for small sizes) is clicked, add 'show' to nav-menu class\n        and 'close' to nav-btn class\n    */\n    const handleClick = () => {\n        if (menu.show === true) {\n            setMenu({\n                show: false,\n                navBtn: '',\n                navMenu: ''\n            })\n        } else {\n            setMenu({\n                show: true,\n                navBtn: ' close',\n                navMenu: ' show'\n            })\n        }\n    };\n\n    // Hide menu when its open and the link of the logo is clicked\n    const hideMenu = () => {\n        setMenu({\n            ...menu,\n            navBtn: '',\n            navMenu: ''\n        })\n    }\n\n    return (\n        <header className=\"header\" >\n            <div className=\"logo\"><Link to=\"/\" onClick={() => hideMenu()}><h2>Movie Search</h2></Link></div>\n            <nav className=\"nav\">\n                <div className={`nav-btn${menu.navBtn}`} onClick={() => handleClick()}>\n                    <div className=\"btn-line\"></div>\n                    <div className=\"btn-line\"></div>\n                    <div className=\"btn-line\"></div>\n                </div>\n                <ul className={`nav-menu${menu.navMenu}`}>\n                    <NavLink to=\"/\" className=\"nav-link\" onClick={() => hideMenu()}>\n                        <li className=\"nav-item\" >Home</li>\n                    </NavLink>\n                    <hr className=\"nav-line\" />\n                    <NavLink to=\"/favorites\" className=\"nav-link\" onClick={() => hideMenu()}>\n                        <li className=\"nav-item\">Favorites <span className=\"fav-count\">{favCount}</span></li>\n                    </NavLink>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nconst mapStateToProps = state => ({\n    favCount: state.favoriteReducer.favorites.length\n});\n\nexport default connect(mapStateToProps)(Header);","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getMovie, setLoader } from './redux/actionCreators';\n\nconst SearchBar = ({ showMovie }) => {\n\n    const [movie, setMovie] = useState({\n        title: ''\n    });\n\n    const handleClick = (e) => {\n        e.preventDefault();\n        setMovie({\n            title: e.target.value\n        })\n    }\n\n    const pressEnter = (e) => {\n        // If enter key is pressed, call showMovie function\n        if (e.keyCode === 13) {\n            showMovie(movie.title);\n        }\n    }\n\n    const resetInput = (e) => {\n        setMovie({\n            title: ''\n        })\n    }\n\n    return (\n        <div className=\"search\">\n            <div className=\"search-bar\">\n                <div className=\"search-icon\" onClick={() => showMovie(movie.title)}>\n                    <i className=\"fas fa-search\"></i>\n                </div>\n                <input\n                    type=\"text\"\n                    className=\"search-input\"\n                    placeholder=\"search for a movie...\"\n                    value={movie.title}\n                    onChange={(e) => handleClick(e)}\n                    onKeyDown={(e) => pressEnter(e)}\n                />\n                {\n                    // If input is not empty, add reset button. If it is filled, remove it. \n                    (movie.title !== '')\n                        ? <button type=\"reset\" className=\"reset-icon fas fa-times\"\n                            onClick={() => resetInput()}>\n                        </button>\n                        : <button className=\"reset-icon-hidden fas fa-times\"></button>\n                }\n\n            </div>\n        </div >\n    );\n}\n\nconst mapDispatchToProps = dispatch => ({\n    showMovie(title) {\n        if (title !== '') {\n            dispatch(getMovie(title));\n            dispatch(setLoader())\n        } else alert(\"Please, enter a movie\")\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);","import React, { useState } from 'react';\nimport { addToFavorites, removeFromFavorites } from './redux/actionCreators';\nimport { connect } from 'react-redux';\n\nconst Movie = ({ movie, id, poster, title, year, rating,\n    plot, length, cast, fav, addMovieToFavorites, removeMovieFromFavorites, loader }) => {\n\n    let timeout;\n\n    const [time, setTime] = useState({\n        hasExpired: false\n    });\n\n    const loading = () => {\n        timeout = setTimeout(() => {\n            setTime({\n                hasExpired: true\n            })\n        }, 6000)\n    }\n\n    return (\n        // Show loader icon until the data is loaded\n        (loader)\n            ? <i className=\"heading fas fa-spinner fa-spin fa-5x\"></i>\n            :\n            (movie.id === '')\n                ? <>\n                    {loading()}\n                    {\n                        // Give 6 seconds to load. If time is exceeded throw a message error\n                        (!time.hasExpired)\n                            ? <i className=\"heading fas fa-spinner fa-spin fa-5x\"></i>\n                            : <><div className=\"heading\"><i className=\"heading-item far fa-times-circle fa-5x\"></i>\n                                <h2 className=\"heading-item\">No movie found... Try it again</h2></div>\n                                {clearTimeout(timeout)}\n                            </>\n                    }\n                </>\n                : <div className=\"movie\">\n                    <img className=\"movie-poster\"\n                        src={poster}\n                        alt=\"Movie Poster\" />\n                    <div className=\"movie-items\">\n                        <h1 className=\"movie-item\">\n                            {title}</h1>\n                        <span className=\"movie-item\">{year}</span>\n                        <div className=\"movie-item rate-fav\">\n                            <div className=\"movie-rating\">\n                                <i className=\"fas fa-star\"> <span>{rating}</span></i>\n                            </div>\n\n                            {\n                                // Validate if movie is already added to favorite list\n                                fav.find(f => f.id === id)\n                                    ? <button className=\"fav-btn fav-btn-disable\"\n                                        onClick={() => removeMovieFromFavorites(id)}>\n                                        <i className=\"fas fa-heart\">\n                                            <span> {/* Remove from favorites */}</span></i>\n                                    </button>\n                                    : <button className=\"fav-btn\"\n                                        onClick={() => addMovieToFavorites(movie)}>\n                                        <i className=\"fas fa-heart\">\n                                            <span> {/* Add to favorites */}</span></i>\n                                    </button>\n                            }\n\n                        </div>\n                        <p className=\"movie-item movie-plot\">{plot}</p>\n                        <span className=\"movie-item\">\n                            {\n                                // If movie length is 0 by default, set defaultProps.length\n                                (length === 0)\n                                    ? Movie.defaultProps.length\n                                    : length\n                            }\n                        </span>\n                        <ul className=\"movie-item\">\n                            <h2>Cast:</h2>\n                            <hr />\n                            {\n                                cast.map(p => (<li><span className=\"movie-actor\">{p.actor}</span> - {p.character}</li>))\n                            }\n\n                        </ul>\n                    </div>\n                </div >\n\n    );\n\n\n}\n\nMovie.defaultProps = {\n    title: \"No title\",\n    year: \"Unknown release date\",\n    rating: \"No rating\",\n    plot: \"No plot\",\n    length: \"Unknown length\",\n    cast: \"Unknown cast\"\n}\n\nconst mapStateToProps = state => ({\n    fav: state.favoriteReducer.favorites,\n    loader: state.movieReducer.loader\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addMovieToFavorites(movie) {\n        dispatch(addToFavorites(movie));\n    },\n    removeMovieFromFavorites(id) {\n        dispatch(removeFromFavorites(id))\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);","import React from 'react';\nimport SearchBar from './SearchBar.jsx';\nimport Movie from './Movie.jsx';\nimport { connect } from 'react-redux';\n\n\nconst Home = ({ movie }) => (\n    <main className=\"home\">\n        <SearchBar />\n        <Movie\n            movie={movie}\n            id={movie.id}\n            poster={movie.poster}\n            title={movie.title}\n            year={movie.year}\n            rating={movie.rating}\n            plot={movie.plot}\n            length={movie.length}\n            cast={movie.cast}\n        />\n    </main>\n);\n\nconst mapStateToProps = state => ({\n    movie: state.movieReducer.movie\n});\n\nexport default connect(mapStateToProps)(Home);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { removeFromFavorites } from './redux/actionCreators';\nimport { Link } from 'react-router-dom';\n\nconst Favorite = ({ id, title, year, rating, image, removeMovieFromFavorites }) => {\n\n    return (\n        <div className=\"card\">\n            <img className=\"card-image\"\n                src={image}\n                alt=\"Movie Poster\"\n            />\n            <div className=\"card-items\">\n                <div className=\"card-title\">\n                    <h2>\n                        {\n                            // Shortens the title if it is too long and add ellipsis\n                            (title.length < 16)\n                                ? title\n                                : title.substr(0, 16).concat('...')\n\n                        }\n                    </h2>\n                </div>\n                <span className=\"card-year\">{year}</span>\n                <div className=\"rate-fav\">\n                    <div className=\"movie-rating\">\n                        <i className=\"fas fa-star\"> <span>{rating}</span></i>\n                    </div>\n                    <Link to=\"favorites\" className=\"fav-btn fav-btn-disable\" onClick={() => removeMovieFromFavorites(id)}>\n                        <i className=\"fas fa-heart\"> {/* <span>Remove favorite</span> */}</i>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nFavorite.defaultProps = {\n    title: \"No title\",\n    year: \"Unknown release date\",\n    rating: \"No rating\",\n}\n\nconst mapDispatchToProps = dispatch => ({\n    removeMovieFromFavorites(id) {\n        dispatch(removeFromFavorites(id));\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Favorite);\n","import React from 'react';\nimport Favorite from './Favorite';\nimport { showFavMovie } from './redux/actionCreators';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst Favorites = ({ fav, showMovie }) => (\n\n    <main className=\"favorites\">\n        {\n            /* \n                If there is a movie saved in the favorites list, show it. If not, \n                add a recommendation \n            */\n            fav.find(f => f)\n                ? fav.map(f =>\n                    <Link to=\"/\" onClick={() => showMovie(f)} >\n                        <Favorite\n                            id={f.id}\n                            title={f.title}\n                            year={f.year}\n                            rating={f.rating}\n                            image={f.poster}\n                        />\n                    </Link>)\n                : <div className=\"heading\">\n                    <h2 className=\"heading-item\">Add a movie to your favorites list...</h2>\n                    <Link to=\"/\" className=\"heading-item heading-btn fas fa-plus-circle fa-5x\"></Link>\n                </div>\n        }\n    </main >\n);\n\nconst mapStateToProps = state => ({\n    fav: state.favoriteReducer.favorites\n});\n\nconst mapDispatchToProps = dispatch => ({\n    showMovie(movie) {\n        dispatch(showFavMovie(movie));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Favorites);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './Header.jsx';\nimport Home from './Home.jsx';\nimport Favorites from './Favorites.jsx';\n\nconst Routes = () => (\n    <Router basename=\"movie-search\">\n        <Header />\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/favorites\" component={Favorites} />\n        </Switch>\n    </Router>\n);\n\nexport default Routes;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { SHOW_MOVIE, ADD_FAVORITE, REMOVE_FAVORITE, SET_LOADER } from './actions';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst initialMovie = {\n    movie: [],\n    loader: true\n}\n\nconst initialFavorites = {\n    favorites: []\n}\n\nconst movieReducer = (state = initialMovie, action) => {\n    if (action.type === SHOW_MOVIE) {\n        return {\n            ...state,\n            movie: action.movie,\n            loader: false\n        }\n    }\n    if (action.type === SET_LOADER) {\n        return {\n            ...state,\n            loader: true\n        }\n    }\n\n    return state;\n}\n\nconst favoriteReducer = (state = initialFavorites, action) => {\n    if (action.type === ADD_FAVORITE) {\n        return {\n            ...state,\n            favorites: state.favorites.concat(action.favorite)\n        }\n    }\n    if (action.type === REMOVE_FAVORITE) {\n        return {\n            ...state,\n            favorites: state.favorites.filter(f => f.id !== action.id)\n        }\n    }\n\n    return state;\n}\n\nexport default createStore(combineReducers({ movieReducer, favoriteReducer }), composeWithDevTools(applyMiddleware(thunk)));","import React from \"react\";\nimport main from \"../scss/main.scss\";\nimport { getMovie } from \"./redux/actionCreators\";\nimport Routes from './Routes.jsx';\nimport { Provider } from 'react-redux';\nimport store from './redux/store.js';\n\n/* \n    Add random movie recommendations to avoid an empty space \n    when visiting the website for the first time\n */\n\nconst movies = [\"Inception\", \"Joker\", \"Interstellar\", \"Pulp Fiction\",\n    \"The Godfather\", \"Fight Club\", \"Lord Of The Rings\", \"Blade Runner\"]\n\nconst randomMovie = () => {\n    return movies[Math.floor(Math.random() * movies.length)]\n}\n\nstore.dispatch(getMovie(randomMovie()));\n\n// App\nconst App = () => (\n\n    <Provider store={store}>\n        <Routes />\n    </Provider>\n)\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.jsx\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}